https://cursos.alura.com.br/formacao-python-data-science
https://cursos.alura.com.br/course/pandas-io

https://colab.research.google.com/notebooks/intro.ipynb#recent=true
O código do seu notebook é executado em uma máquina virtual dedicada à sua conta.

---------------------------------------------------------------------------------------------
https://servicodados.ibge.gov.br/api/v2/censos/nomes/ranking

**seleciona os 20 primeiros de sexo feminino
https://servicodados.ibge.gov.br/api/v1/censos/nomes/ranking?qtd=20&sexo=f
---------------------------------------------------------------------------------------------
Ler e converter os aqivos em diferentes formatos
pd.read_html()
pd.read_csv()
pd.read_json()
to_html()
to_csv()
to_json()

---------------
Salvar dados em um banco sql que vêm com pandas, o SQLite:
!pip install sqlalchemy
from sqlalchemy import create_engine, MetaData, Table
engine = create_engine('sqlite:///:memory:')
df.to_sql('nome_da_tabela', engine)


1 - ALUNAS E ALUNOS COM JSON 
Lemos um json com a função read_json() para buscar os nomes das alunas e alunos
Juntamos os nomes masculinos e femininos com a função concat() e transformamos em um novo DataFrame com o comando to_frame()
Inserimos um id para identificar melhor cada pessoa

2 - CRIANDO CURSOS LENDO HTML
Lemos uma tabela de uma página html com a fução read_html(), passando a url como parâmetro para buscar os nomes dos cursos
Transformamos o retorno dessa função em um DataFrame com o código cursos = cursos[0]
Criamos um ID para cada curso e setamos o index para ser o id com o código cursos = cursos.set_index('id')

3 - ESCREVENDO CSV, JSON E HTML
Criamos uma nova coluna no DataFrame nomes chamada matriculas para representar quantos cursos cada pessoa está matriculada
Geramos um novo DataFrame matriculas para representar qual curso cada aluno está matriculado
Fizemos um join dos DataFrames matriculas e cursos para exibir a quantidade de alunos em cada curso
Vimos como ler e escrever um DataFrame em diferentes tipos: csv, json e html

4 - LENDO E ESCREVENDO SQL
Aprendemos como utilizar o pandas para ler e escrever em um banco sql
Utilizamos o banco SQLite que vem com o pandas e criamos um banco local
Salvamos o DataFrame de matriculas com o comando matriculas_por_curso.to_sql('matriculas', engine)
Lemos uma tabela do banco com a função read_sql_table() e exibimos o resultado de uma query com o comando read_sql(), passando a query como parâmetro

5 - LENDO E ESCREVENDO EXCEL
Escolhemos um curso e selecionamos todas as pessoas matriculadas nele
Exportamos o DataFrame para o tipo excel com o comando proxima_turma.to_excel('proxima_turma.xlsx', index=False)
Para verificar se o DataFrame estava certo, lemos o arquivo excel com o comando pd.read_excel('proxima_turma.xlsx')
